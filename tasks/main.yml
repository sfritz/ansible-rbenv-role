---
- include: apt_build_depends.yml
  when: ansible_pkg_mgr == 'apt'
- include: yum_build_depends.yml
  when: ansible_pkg_mgr == 'yum'
# - include: pacman_build_depends.yml # Arch Linux
#   when: ansible_pkg_mgr == 'pacman'
- include: homebrew_build_depends.yml
  when: ansible_os_family == 'Darwin'

- name: checkout rbenv_repo for system
  git: >
    repo={{ rbenv_repo }}
    dest={{ rbenv_root }}
    version={{ rbenv.version }}
    accept_hostkey=true
    force=yes
  tags:
    - rbenv

- name: create plugins directory for system
  file: state=directory path={{ rbenv_root }}/plugins
  tags:
    - rbenv

- name: install plugins for system
  git: >
    repo={{ item.repo }}
    dest={{ rbenv_root }}/plugins/{{ item.name }}
    version={{ item.version }}
    accept_hostkey=true
    force=yes
  with_items: rbenv_plugins
  tags:
    - rbenv

- name: add rbenv initialization to profile system-wide
  template: src=rbenv.sh.j2 dest=/etc/profile.d/rbenv.sh owner=root group=root mode=0755
  sudo: true
  when:
    - ansible_os_family != 'OpenBSD'
  tags:
    - rbenv

- name: set default-gems for system
  copy: src=default-gems dest={{ rbenv_root }}/default-gems
  sudo: true
  when:
    - default_gems_file is not defined
  ignore_errors: true
  tags:
    - rbenv

- name: set custom default-gems for system
  copy: src={{ default_gems_file }} dest={{ rbenv_root }}/default-gems
  sudo: true
  when:
    - default_gems_file is defined
  ignore_errors: true
  tags:
    - rbenv

- name: register installed rubies for system
  shell: $SHELL -lc "rbenv versions | grep {{ item }}"
  register: installed_rubies
  changed_when: false
  ignore_errors: yes
  always_run: yes
  with_items: rbenv.ruby_versions
  tags:
    - rbenv

- name: install missing ruby versions for system
  shell: bash -lc "rbenv install {{ item.item }}"
  when:
    - item.rc != 0
  with_items: installed_rubies.results
  tags:
    - rbenv
